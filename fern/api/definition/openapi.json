{
  "openapi": "3.0.0",
  "info": {
    "description": "Venice: open source infrastructure to enable the frictionless movement of financial data.",
    "title": "Venice REST API",
    "version": "2023-02-26"
  },
  "paths": {
    "/": {
      "get": {
        "tags": [
          "Introspection"
        ],
        "operationId": "get",
        "summary": "OpenAPI description (this document)",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/account": {
      "get": {
        "tags": [
          "account"
        ],
        "operationId": "get",
        "x-request-name": "GetAccount",
        "summary": "@graphql({",
        "description": "\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"foreign_keys\": []\n})",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.account.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.type"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.last_four"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.institution_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.default_unit"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.current_balance"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.available_balance"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.created_at"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/account"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/account"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/account"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "account"
        ],
        "operationId": "create",
        "x-request-name": "CreateAccount",
        "summary": "@graphql({",
        "description": "\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"foreign_keys\": []\n})",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/preferPost"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/account"
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "account"
        ],
        "operationId": "delete",
        "summary": "@graphql({",
        "x-request-name": "DeleteAccount",
        "description": "\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"foreign_keys\": []\n})",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.account.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.type"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.last_four"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.institution_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.default_unit"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.current_balance"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.available_balance"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.created_at"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "account"
        ],
        "operationId": "update",
        "summary": "@graphql({",
        "x-request-name": "UpdateAccount",
        "description": "\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"foreign_keys\": []\n})",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.account.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.type"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.last_four"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.institution_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.default_unit"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.current_balance"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.available_balance"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.account.created_at"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/account"
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/institution": {
      "get": {
        "tags": [
          "institution"
        ],
        "operationId": "get",
        "x-request-name": "GetInstitution",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.institution.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.provider_name"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/institution"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/institution"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/institution"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "institution"
        ],
        "operationId": "create",
        "x-request-name": "CreateInstitution",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/preferPost"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/institution"
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "institution"
        ],
        "operationId": "delete",
        "x-request-name": "DeleteInstitution",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.institution.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.provider_name"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "institution"
        ],
        "operationId": "update",
        "x-request-name": "UpdateInstitution",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.institution.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.institution.provider_name"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/institution"
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/integration": {
      "get": {
        "tags": [
          "integration"
        ],
        "operationId": "get",
        "x-request-name": "GetIntegration",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.integration.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.config"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.provider_name"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/integration"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/integration"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/integration"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "integration"
        ],
        "operationId": "create",
        "x-request-name": "CreateIntegration",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/preferPost"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/integration"
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "integration"
        ],
        "operationId": "delete",
        "x-request-name": "DeleteIntegration",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.integration.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.config"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.provider_name"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "integration"
        ],
        "operationId": "update",
        "x-request-name": "UpdateIntegration",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.integration.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.config"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.integration.provider_name"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/integration"
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/pipeline": {
      "get": {
        "tags": [
          "pipeline"
        ],
        "operationId": "get",
        "x-request-name": "GetPipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.source_state"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.destination_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.destination_state"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.link_options"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.last_sync_started_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.last_sync_completed_at"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/pipeline"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/pipeline"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/pipeline"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "pipeline"
        ],
        "operationId": "create",
        "x-request-name": "CreatePipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/preferPost"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/pipeline"
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "pipeline"
        ],
        "operationId": "delete",
        "x-request-name": "DeletePipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.source_state"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.destination_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.destination_state"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.link_options"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.last_sync_started_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.last_sync_completed_at"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "pipeline"
        ],
        "operationId": "update",
        "x-request-name": "update_pipeline",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.source_state"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.destination_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.destination_state"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.link_options"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.last_sync_started_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.pipeline.last_sync_completed_at"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/pipeline"
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/raw_account": {
      "get": {
        "tags": [
          "raw_account"
        ],
        "operationId": "get",
        "x-request-name": "get_raw_account",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.ledger_resource_id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/raw_account"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/raw_account"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/raw_account"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "raw_account"
        ],
        "operationId": "create",
        "x-request-name": "create_raw_account",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/preferPost"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/raw_account"
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "raw_account"
        ],
        "operationId": "delete",
        "x-request-name": "delete_raw_account",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.ledger_resource_id"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "raw_account"
        ],
        "operationId": "update",
        "x-request-name": "update_raw_account",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_account.ledger_resource_id"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/raw_account"
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/raw_commodity": {
      "get": {
        "tags": [
          "raw_commodity"
        ],
        "operationId": "get",
        "x-request-name": "get_raw_commodity",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.ledger_resource_id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/raw_commodity"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/raw_commodity"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/raw_commodity"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "raw_commodity"
        ],
        "operationId": "create",
        "x-request-name": "create_raw_commodity",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/preferPost"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/raw_commodity"
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "raw_commodity"
        ],
        "operationId": "delete",
        "x-request-name": "delete_raw_commodity",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.ledger_resource_id"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "raw_commodity"
        ],
        "operationId": "update",
        "x-request-name": "update_raw_commodity",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_commodity.ledger_resource_id"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/raw_commodity"
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/raw_transaction": {
      "get": {
        "tags": [
          "raw_transaction"
        ],
        "operationId": "get",
        "x-request-name": "get_raw_transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.ledger_resource_id"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/raw_transaction"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/raw_transaction"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/raw_transaction"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "raw_transaction"
        ],
        "operationId": "create",
        "x-request-name": "create_raw_transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/preferPost"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/raw_transaction"
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "raw_transaction"
        ],
        "operationId": "delete",
        "x-request-name": "delete_raw_transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.ledger_resource_id"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "raw_transaction"
        ],
        "operationId": "update",
        "x-request-name": "update_raw_transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.source_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.standard"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.raw_transaction.ledger_resource_id"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/raw_transaction"
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/resource": {
      "get": {
        "tags": [
          "resource"
        ],
        "operationId": "get",
        "x-request-name": "get_resource",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.resource.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.creator_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.integration_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.institution_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.env_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.settings"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.display_name"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/resource"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/resource"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/resource"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "resource"
        ],
        "operationId": "create",
        "x-request-name": "create_resource",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/preferPost"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/resource"
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "resource"
        ],
        "operationId": "delete",
        "x-request-name": "delete_resource",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.resource.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.creator_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.integration_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.institution_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.env_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.settings"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.display_name"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "resource"
        ],
        "operationId": "update",
        "x-request-name": "update_resource",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.resource.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.creator_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.integration_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.institution_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.env_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.settings"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.created_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.provider_name"
          },
          {
            "$ref": "#/components/parameters/rowFilter.resource.display_name"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/resource"
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/transaction": {
      "get": {
        "tags": [
          "transaction"
        ],
        "operationId": "get",
        "x-request-name": "get_transaction",
        "summary": "TODO: Add description of transaction data type here...",
        "description": "@graphql({\n\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"description\": \"Double entry transaction\",\n\t\"foreign_keys\": [\n\t\t{\n      \"local_name\": \"transactions\",\n      \"local_columns\": [\"account_id\"],\n      \"foreign_name\": \"account\",\n      \"foreign_schema\": \"public\",\n      \"foreign_table\": \"account\",\n      \"foreign_columns\": [\"id\"]\n\t\t}\n\t]\n})",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.transaction.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.date"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.description"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.payee"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.amount_quantity"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.amount_unit"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.account_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.external_category"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.notes"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.splits"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.created_at"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/transaction"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/transaction"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/transaction"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      },
      "post": {
        "tags": [
          "transaction"
        ],
        "operationId": "create",
        "x-request-name": "create_transaction",
        "summary": "TODO: Add description of transaction data type here...",
        "description": "@graphql({\n\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"description\": \"Double entry transaction\",\n\t\"foreign_keys\": [\n\t\t{\n      \"local_name\": \"transactions\",\n      \"local_columns\": [\"account_id\"],\n      \"foreign_name\": \"account\",\n      \"foreign_schema\": \"public\",\n      \"foreign_table\": \"account\",\n      \"foreign_columns\": [\"id\"]\n\t\t}\n\t]\n})",
        "parameters": [
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/preferPost"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/transaction"
        },
        "responses": {
          "201": {
            "description": "Created"
          }
        }
      },
      "delete": {
        "tags": [
          "transaction"
        ],
        "x-request-name": "delete_transaction",
        "summary": "TODO: Add description of transaction data type here...",
        "description": "@graphql({\n\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"description\": \"Double entry transaction\",\n\t\"foreign_keys\": [\n\t\t{\n      \"local_name\": \"transactions\",\n      \"local_columns\": [\"account_id\"],\n      \"foreign_name\": \"account\",\n      \"foreign_schema\": \"public\",\n      \"foreign_table\": \"account\",\n      \"foreign_columns\": [\"id\"]\n\t\t}\n\t]\n})",
        "operationId": "delete",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.transaction.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.date"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.description"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.payee"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.amount_quantity"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.amount_unit"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.account_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.external_category"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.notes"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.splits"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.created_at"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      },
      "patch": {
        "tags": [
          "transaction"
        ],
        "summary": "TODO: Add description of transaction data type here...",
        "description": "@graphql({\n\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"description\": \"Double entry transaction\",\n\t\"foreign_keys\": [\n\t\t{\n      \"local_name\": \"transactions\",\n      \"local_columns\": [\"account_id\"],\n      \"foreign_name\": \"account\",\n      \"foreign_schema\": \"public\",\n      \"foreign_table\": \"account\",\n      \"foreign_columns\": [\"id\"]\n\t\t}\n\t]\n})",
        "operationId": "update",
        "x-request-name": "update_transaction",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.transaction.id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.date"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.description"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.payee"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.amount_quantity"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.amount_unit"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.account_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.external_category"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.notes"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.splits"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.external"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction.created_at"
          },
          {
            "$ref": "#/components/parameters/preferReturn"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/transaction"
        },
        "responses": {
          "204": {
            "description": "No Content"
          }
        }
      }
    },
    "/transaction_split": {
      "get": {
        "tags": [
          "transaction_split"
        ],
        "operationId": "get",
        "x-request-name": "get_transaction_split",
        "summary": "Entities summary",
        "description": "  Entities description that\n  spans\n  multiple lines\n  \n  \n\t@graphql({\n\t\t\"primary_key_columns\": [\"id\", \"key\"],\n\t\t\"totalCount\": {\"enabled\": true},\n\t\t\"foreign_keys\": []\n\t})\n",
        "parameters": [
          {
            "$ref": "#/components/parameters/rowFilter.transaction_split.transaction_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction_split.key"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction_split.amount_quantity"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction_split.amount_unit"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction_split.account_id"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction_split.data"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction_split.updated_at"
          },
          {
            "$ref": "#/components/parameters/rowFilter.transaction_split.created_at"
          },
          {
            "$ref": "#/components/parameters/select"
          },
          {
            "$ref": "#/components/parameters/order"
          },
          {
            "$ref": "#/components/parameters/range"
          },
          {
            "$ref": "#/components/parameters/rangeUnit"
          },
          {
            "$ref": "#/components/parameters/offset"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/preferCount"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/transaction_split"
                  },
                  "type": "array"
                }
              },
              "application/vnd.pgrst.object+json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/transaction_split"
                  },
                  "type": "array"
                }
              },
              "text/csv": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/transaction_split"
                  },
                  "type": "array"
                }
              }
            }
          },
          "206": {
            "description": "Partial Content"
          }
        }
      }
    }
  },
  "externalDocs": {
    "description": "PostgREST Documentation",
    "url": "https://postgrest.org/en/v10.1/api.html"
  },
  "servers": [
    {
      "url": "http://development.venice.local:3000/api/rest",
      "x-server-name": "dev"
    }
  ],
  "components": {
    "parameters": {
      "preferParams": {
        "name": "Prefer",
        "description": "Preference",
        "required": false,
        "in": "header",
        "schema": {
          "type": "string",
          "enum": [
            "params=single-object"
          ]
        }
      },
      "preferReturn": {
        "name": "Prefer",
        "description": "Preference",
        "required": false,
        "in": "header",
        "schema": {
          "$ref": "#/components/schemas/return"
        }
      },
      "preferCount": {
        "name": "Prefer",
        "description": "Preference",
        "required": false,
        "in": "header",
        "schema": {
          "$ref": "#/components/schemas/count"
        }
      },
      "preferPost": {
        "name": "Prefer",
        "description": "Preference",
        "required": false,
        "in": "header",
        "schema": {
          "$ref": "#/components/schemas/return"
        }
      },
      "select": {
        "name": "select",
        "description": "Filtering Columns",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "on_conflict": {
        "name": "on_conflict",
        "description": "On Conflict",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "order": {
        "name": "order",
        "description": "Ordering",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "range": {
        "name": "Range",
        "description": "Limiting and Pagination",
        "required": false,
        "in": "header",
        "schema": {
          "type": "string"
        }
      },
      "rangeUnit": {
        "name": "Range-Unit",
        "description": "Limiting and Pagination",
        "required": false,
        "in": "header",
        "schema": {
          "type": "string",
          "default": "items"
        }
      },
      "offset": {
        "name": "offset",
        "description": "Limiting and Pagination",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "limit": {
        "name": "limit",
        "description": "Limiting and Pagination",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string"
        }
      },
      "rowFilter.raw_transaction.id": {
        "name": "id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.raw_transaction.source_id": {
        "name": "source_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.raw_transaction.standard": {
        "name": "standard",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.raw_transaction.external": {
        "name": "external",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.raw_transaction.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.raw_transaction.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.raw_transaction.provider_name": {
        "name": "provider_name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.raw_transaction.ledger_resource_id": {
        "name": "ledger_resource_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.account.id": {
        "name": "id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.account.name": {
        "name": "name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.account.type": {
        "name": "type",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.account.last_four": {
        "name": "last_four",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.account.institution_name": {
        "name": "institution_name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.account.default_unit": {
        "name": "default_unit",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.account.current_balance": {
        "name": "current_balance",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "double precision"
        }
      },
      "rowFilter.account.available_balance": {
        "name": "available_balance",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "double precision"
        }
      },
      "rowFilter.account.external": {
        "name": "external",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.account.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.account.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.transaction.id": {
        "name": "id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.transaction.date": {
        "name": "date",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction.description": {
        "name": "description",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction.payee": {
        "name": "payee",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction.amount_quantity": {
        "name": "amount_quantity",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "double precision"
        }
      },
      "rowFilter.transaction.amount_unit": {
        "name": "amount_unit",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction.account_id": {
        "name": "account_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction.external_category": {
        "name": "external_category",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction.notes": {
        "name": "notes",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction.splits": {
        "name": "splits",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.transaction.external": {
        "name": "external",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.transaction.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.transaction.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.raw_commodity.id": {
        "name": "id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.raw_commodity.source_id": {
        "name": "source_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.raw_commodity.standard": {
        "name": "standard",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.raw_commodity.external": {
        "name": "external",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.raw_commodity.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.raw_commodity.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.raw_commodity.provider_name": {
        "name": "provider_name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.raw_commodity.ledger_resource_id": {
        "name": "ledger_resource_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.resource.id": {
        "name": "id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.resource.creator_id": {
        "name": "creator_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.resource.integration_id": {
        "name": "integration_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.resource.institution_id": {
        "name": "institution_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.resource.env_name": {
        "name": "env_name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.resource.settings": {
        "name": "settings",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.resource.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.resource.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.resource.provider_name": {
        "name": "provider_name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.resource.display_name": {
        "name": "display_name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.pipeline.id": {
        "name": "id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.pipeline.source_id": {
        "name": "source_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.pipeline.source_state": {
        "name": "source_state",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.pipeline.destination_id": {
        "name": "destination_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.pipeline.destination_state": {
        "name": "destination_state",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.pipeline.link_options": {
        "name": "link_options",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.pipeline.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.pipeline.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.pipeline.last_sync_started_at": {
        "name": "last_sync_started_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.pipeline.last_sync_completed_at": {
        "name": "last_sync_completed_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.integration.id": {
        "name": "id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.integration.config": {
        "name": "config",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.integration.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.integration.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.integration.provider_name": {
        "name": "provider_name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.transaction_split.transaction_id": {
        "name": "transaction_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.transaction_split.key": {
        "name": "key",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction_split.amount_quantity": {
        "name": "amount_quantity",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction_split.amount_unit": {
        "name": "amount_unit",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction_split.account_id": {
        "name": "account_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "text"
        }
      },
      "rowFilter.transaction_split.data": {
        "name": "data",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.transaction_split.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.transaction_split.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.raw_account.id": {
        "name": "id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.raw_account.source_id": {
        "name": "source_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.raw_account.standard": {
        "name": "standard",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.raw_account.external": {
        "name": "external",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.raw_account.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.raw_account.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.raw_account.provider_name": {
        "name": "provider_name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.raw_account.ledger_resource_id": {
        "name": "ledger_resource_id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.institution.id": {
        "name": "id",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      },
      "rowFilter.institution.standard": {
        "name": "standard",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.institution.external": {
        "name": "external",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "jsonb"
        }
      },
      "rowFilter.institution.created_at": {
        "name": "created_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.institution.updated_at": {
        "name": "updated_at",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "timestamp with time zone"
        }
      },
      "rowFilter.institution.provider_name": {
        "name": "provider_name",
        "required": false,
        "in": "query",
        "schema": {
          "type": "string",
          "format": "character varying"
        }
      }
    },
    "requestBodies": {
      "institution": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/institution"
            }
          },
          "application/vnd.pgrst.object+json": {
            "schema": {
              "$ref": "#/components/schemas/institution"
            }
          },
          "text/csv": {
            "schema": {
              "$ref": "#/components/schemas/institution"
            }
          }
        },
        "description": "institution"
      },
      "raw_commodity": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/raw_commodity"
            }
          },
          "application/vnd.pgrst.object+json": {
            "schema": {
              "$ref": "#/components/schemas/raw_commodity"
            }
          },
          "text/csv": {
            "schema": {
              "$ref": "#/components/schemas/raw_commodity"
            }
          }
        },
        "description": "raw_commodity"
      },
      "account": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/account"
            }
          },
          "application/vnd.pgrst.object+json": {
            "schema": {
              "$ref": "#/components/schemas/account"
            }
          },
          "text/csv": {
            "schema": {
              "$ref": "#/components/schemas/account"
            }
          }
        },
        "description": "account"
      },
      "raw_account": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/raw_account"
            }
          },
          "application/vnd.pgrst.object+json": {
            "schema": {
              "$ref": "#/components/schemas/raw_account"
            }
          },
          "text/csv": {
            "schema": {
              "$ref": "#/components/schemas/raw_account"
            }
          }
        },
        "description": "raw_account"
      },
      "pipeline": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/pipeline"
            }
          },
          "application/vnd.pgrst.object+json": {
            "schema": {
              "$ref": "#/components/schemas/pipeline"
            }
          },
          "text/csv": {
            "schema": {
              "$ref": "#/components/schemas/pipeline"
            }
          }
        },
        "description": "pipeline"
      },
      "integration": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/integration"
            }
          },
          "application/vnd.pgrst.object+json": {
            "schema": {
              "$ref": "#/components/schemas/integration"
            }
          },
          "text/csv": {
            "schema": {
              "$ref": "#/components/schemas/integration"
            }
          }
        },
        "description": "integration"
      },
      "raw_transaction": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/raw_transaction"
            }
          },
          "application/vnd.pgrst.object+json": {
            "schema": {
              "$ref": "#/components/schemas/raw_transaction"
            }
          },
          "text/csv": {
            "schema": {
              "$ref": "#/components/schemas/raw_transaction"
            }
          }
        },
        "description": "raw_transaction"
      },
      "resource": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/resource"
            }
          },
          "application/vnd.pgrst.object+json": {
            "schema": {
              "$ref": "#/components/schemas/resource"
            }
          },
          "text/csv": {
            "schema": {
              "$ref": "#/components/schemas/resource"
            }
          }
        },
        "description": "resource"
      },
      "transaction": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/transaction"
            }
          },
          "application/vnd.pgrst.object+json": {
            "schema": {
              "$ref": "#/components/schemas/transaction"
            }
          },
          "text/csv": {
            "schema": {
              "$ref": "#/components/schemas/transaction"
            }
          }
        },
        "description": "transaction"
      }
    },
    "schemas": {
      "account": {
        "description": "@graphql({\n\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"foreign_keys\": []\n})",
        "properties": {
          "id": {
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "name": {
            "format": "text",
            "type": "string"
          },
          "type": {
            "format": "text",
            "type": "string"
          },
          "last_four": {
            "format": "text",
            "type": "string"
          },
          "institution_name": {
            "format": "text",
            "type": "string"
          },
          "default_unit": {
            "format": "text",
            "type": "string"
          },
          "current_balance": {
            "format": "double precision",
            "type": "number"
          },
          "available_balance": {
            "format": "double precision",
            "type": "number"
          },
          "external": {
            "format": "jsonb"
          },
          "updated_at": {
            "format": "timestamp with time zone",
            "type": "string"
          },
          "created_at": {
            "format": "timestamp with time zone",
            "type": "string"
          }
        },
        "type": "object"
      },
      "institution": {
        "required": [
          "id",
          "standard",
          "external",
          "created_at",
          "updated_at",
          "provider_name"
        ],
        "properties": {
          "id": {
            "default": "public.generate_ulid()",
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "standard": {
            "format": "jsonb"
          },
          "external": {
            "format": "jsonb"
          },
          "created_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "updated_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "provider_name": {
            "default": "split_part((id)::text, '_'::text, 2)",
            "format": "character varying",
            "type": "string"
          }
        },
        "type": "object"
      },
      "count": {
        "type": "string",
        "enum": [
          "count=none"
        ], 
        "x-enum-names": {
          "count=none": "None"
        }
      },
      "return": {
        "type": "string",
        "enum": [
          "return=representation",
          "return=minimal",
          "return=none",
          "resolution=ignore-duplicates",
          "resolution=merge-duplicates"
        ],
        "x-enum-names": {
          "return=representation": "Representation",
          "return=minimal": "Minimal",
          "return=none": "None",
          "resolution=ignore-duplicates": "Ignore_Duplicates",
          "resolution=merge-duplicates": "Merge_Duplicates"
        }
      },
      "integration": {
        "required": [
          "id",
          "config",
          "created_at",
          "updated_at",
          "provider_name"
        ],
        "properties": {
          "id": {
            "default": "public.generate_ulid()",
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "config": {
            "format": "jsonb"
          },
          "created_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "updated_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "provider_name": {
            "default": "split_part((id)::text, '_'::text, 2)",
            "format": "character varying",
            "type": "string"
          }
        },
        "type": "object"
      },
      "pipeline": {
        "required": [
          "id",
          "source_state",
          "destination_state",
          "link_options",
          "created_at",
          "updated_at"
        ],
        "properties": {
          "id": {
            "default": "public.generate_ulid()",
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "source_id": {
            "description": "Note:\nThis is a Foreign Key to `resource.id`.<fk table='resource' column='id'/>",
            "format": "character varying",
            "type": "string"
          },
          "source_state": {
            "format": "jsonb"
          },
          "destination_id": {
            "description": "Note:\nThis is a Foreign Key to `resource.id`.<fk table='resource' column='id'/>",
            "format": "character varying",
            "type": "string"
          },
          "destination_state": {
            "format": "jsonb"
          },
          "link_options": {
            "format": "jsonb"
          },
          "created_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "updated_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "last_sync_started_at": {
            "format": "timestamp with time zone",
            "type": "string"
          },
          "last_sync_completed_at": {
            "format": "timestamp with time zone",
            "type": "string"
          }
        },
        "type": "object"
      },
      "raw_account": {
        "required": [
          "id",
          "standard",
          "external",
          "created_at",
          "updated_at",
          "provider_name"
        ],
        "properties": {
          "id": {
            "default": "public.generate_ulid()",
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "source_id": {
            "format": "character varying",
            "type": "string"
          },
          "standard": {
            "format": "jsonb"
          },
          "external": {
            "format": "jsonb"
          },
          "created_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "updated_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "provider_name": {
            "default": "split_part((id)::text, '_'::text, 2)",
            "format": "character varying",
            "type": "string"
          },
          "ledger_resource_id": {
            "description": "Note:\nThis is a Foreign Key to `resource.id`.<fk table='resource' column='id'/>",
            "format": "character varying",
            "type": "string"
          }
        },
        "type": "object"
      },
      "raw_commodity": {
        "required": [
          "id",
          "standard",
          "external",
          "created_at",
          "updated_at",
          "provider_name"
        ],
        "properties": {
          "id": {
            "default": "public.generate_ulid()",
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "source_id": {
            "format": "character varying",
            "type": "string"
          },
          "standard": {
            "format": "jsonb"
          },
          "external": {
            "format": "jsonb"
          },
          "created_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "updated_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "provider_name": {
            "default": "split_part((id)::text, '_'::text, 2)",
            "format": "character varying",
            "type": "string"
          },
          "ledger_resource_id": {
            "description": "Note:\nThis is a Foreign Key to `resource.id`.<fk table='resource' column='id'/>",
            "format": "character varying",
            "type": "string"
          }
        },
        "type": "object"
      },
      "raw_transaction": {
        "required": [
          "id",
          "standard",
          "external",
          "created_at",
          "updated_at",
          "provider_name"
        ],
        "properties": {
          "id": {
            "default": "public.generate_ulid()",
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "source_id": {
            "format": "character varying",
            "type": "string"
          },
          "standard": {
            "format": "jsonb"
          },
          "external": {
            "format": "jsonb"
          },
          "created_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "updated_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "provider_name": {
            "default": "split_part((id)::text, '_'::text, 2)",
            "format": "character varying",
            "type": "string"
          },
          "ledger_resource_id": {
            "description": "Note:\nThis is a Foreign Key to `resource.id`.<fk table='resource' column='id'/>",
            "format": "character varying",
            "type": "string"
          }
        },
        "type": "object"
      },
      "resource": {
        "required": [
          "id",
          "settings",
          "created_at",
          "updated_at",
          "provider_name"
        ],
        "properties": {
          "id": {
            "default": "public.generate_ulid()",
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "creator_id": {
            "format": "character varying",
            "type": "string"
          },
          "integration_id": {
            "description": "Note:\nThis is a Foreign Key to `integration.id`.<fk table='integration' column='id'/>",
            "format": "character varying",
            "type": "string"
          },
          "institution_id": {
            "description": "Note:\nThis is a Foreign Key to `institution.id`.<fk table='institution' column='id'/>",
            "format": "character varying",
            "type": "string"
          },
          "env_name": {
            "format": "character varying",
            "type": "string"
          },
          "settings": {
            "format": "jsonb"
          },
          "created_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "updated_at": {
            "default": "now()",
            "format": "timestamp with time zone",
            "type": "string"
          },
          "provider_name": {
            "default": "split_part((id)::text, '_'::text, 2)",
            "format": "character varying",
            "type": "string"
          },
          "display_name": {
            "format": "character varying",
            "type": "string"
          }
        },
        "type": "object"
      },
      "transaction": {
        "description": "TODO: Add description of transaction data type here...\n\n@graphql({\n\t\"primary_key_columns\": [\"id\"],\n\t\"totalCount\": {\"enabled\": true},\n\t\"description\": \"Double entry transaction\",\n\t\"foreign_keys\": [\n\t\t{\n      \"local_name\": \"transactions\",\n      \"local_columns\": [\"account_id\"],\n      \"foreign_name\": \"account\",\n      \"foreign_schema\": \"public\",\n      \"foreign_table\": \"account\",\n      \"foreign_columns\": [\"id\"]\n\t\t}\n\t]\n})",
        "properties": {
          "id": {
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "date": {
            "format": "text",
            "type": "string"
          },
          "description": {
            "format": "text",
            "type": "string"
          },
          "payee": {
            "format": "text",
            "type": "string"
          },
          "amount_quantity": {
            "format": "double precision",
            "type": "number"
          },
          "amount_unit": {
            "format": "text",
            "type": "string"
          },
          "account_id": {
            "format": "text",
            "type": "string"
          },
          "external_category": {
            "format": "text",
            "type": "string"
          },
          "notes": {
            "format": "text",
            "type": "string"
          },
          "splits": {
            "format": "jsonb"
          },
          "external": {
            "format": "jsonb"
          },
          "updated_at": {
            "format": "timestamp with time zone",
            "type": "string"
          },
          "created_at": {
            "format": "timestamp with time zone",
            "type": "string"
          }
        },
        "type": "object"
      },
      "transaction_split": {
        "description": "Entities summary\n\n  Entities description that\n  spans\n  multiple lines\n  \n  \n\t@graphql({\n\t\t\"primary_key_columns\": [\"id\", \"key\"],\n\t\t\"totalCount\": {\"enabled\": true},\n\t\t\"foreign_keys\": []\n\t})\n",
        "properties": {
          "transaction_id": {
            "description": "Note:\nThis is a Primary Key.<pk/>",
            "format": "character varying",
            "type": "string"
          },
          "key": {
            "format": "text",
            "type": "string"
          },
          "amount_quantity": {
            "format": "text",
            "type": "string"
          },
          "amount_unit": {
            "format": "text",
            "type": "string"
          },
          "account_id": {
            "format": "text",
            "type": "string"
          },
          "data": {
            "format": "jsonb"
          },
          "updated_at": {
            "format": "timestamp with time zone",
            "type": "string"
          },
          "created_at": {
            "format": "timestamp with time zone",
            "type": "string"
          }
        },
        "type": "object"
      }
    }
  }
}